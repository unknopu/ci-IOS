name: Build Xamarin.iOS app

on: [push]

# permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  build:

    runs-on: macos-latest
    
    steps:
    - name: Show what in there
      run: |
        ls
    
    - uses: actions/checkout@v2
      name: Set default Xamarin SDK versions
    
    - uses: maxim-lobanov/setup-xcode@v1
      name: Set default Xcode latest
      with:
        xcode-version: latest

    - name: Setup .NET Core SDK 5.0.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x

    - name: Install dependencies
      run: nuget restore testCert.sln

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATES_P12 }}
        P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Build
      run: |
        msbuild testCert/testCert.iOS/testCert.iOS.csproj /p:Configuration=debug /p:Platform=iPhone /p:BuildIpa=true

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ROLE2ASSUME }}
        aws-region: ${{ secrets.AWS_REGIOIN }}

    - name: Copy files to the production website with the AWS CLI
      run: |
        aws s3 cp testCert/testCert.iOS/bin/iPhoneSimulator/Debug/testCert.iOS.app/testCert.iOS \
        s3://${{ secrets.BUCKET_NAME }}

    - name: Upload Artifact to NX Server
      run: |
        curl -k -u '${{ secrets.NX_USERNAME }}:${{ secrets.NX_PASSWORD }}' \
        --upload-file testCert/testCert.iOS/bin/iPhoneSimulator/Debug/testCert.iOS.app/testCert.iOS \
        https://nexus.cloud2.gq/repository/ios-test/

# msbuild testCert/testCert.iOS/testCert.iOS.csproj /p:Configuration=debug /p:Platform=iPhone /p:BuildIpa=true
