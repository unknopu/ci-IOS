name: Build Xamarin.iOS app

on: [push]

# permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  build:

    runs-on: macos-latest
    
    steps:
    - name: Show what in there
      run: |
        ls
    
    - uses: actions/checkout@v2
      name: Set default Xamarin SDK versions
    
    - uses: maxim-lobanov/setup-xcode@v1
      name: Set default Xcode latest
      with:
        xcode-version: latest

    - name: Setup .NET Core SDK 5.0.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x

    # - name: Install dependencies
    #   run: nuget restore testCert.sln

    - uses: apple-actions/import-codesign-certs@v1
      name: Setup iOS Certificates 
      with: 
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

    # - name: Setup iOS Provisioning Profiles
    #   uses: apple-actions/download-provisioning-profiles@v1
    #   with:
    #     bundle-id: 'dev.sbyte.githubactionsxamarin'
    #     profile-type: 'IOS_APP_ADHOC'
    #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
    #     api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
    #     api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

    - name: Build
      run: |
        msbuild testCert/testCert.iOS/testCert.iOS.csproj /p:Configuration=release /p:Platform=iPhone /p:BuildIpa=true

    - name: Show finally what in there
      run: |
        ls -l testCert/testCert.iOS/bin/iPhoneSimulator/Debug/

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ROLE2ASSUME }}
        aws-region: ${{ secrets.AWS_REGIOIN }}

    - name: Copy files to the production website with the AWS CLI
      run: |
        aws s3 cp testCert/testCert.iOS/bin/iPhoneSimulator/Debug/testCert.iOS.app/testCert.iOS \
        s3://${{ secrets.BUCKET_NAME }}

    - name: Upload Artifact to NX Server
      run: |
        curl -k -u '${{ secrets.NX_USERNAME }}:${{ secrets.NX_PASSWORD }}' \
        --upload-file testCert/testCert.iOS/bin/iPhoneSimulator/Debug/testCert.iOS.app/testCert.iOS \
        https://nexus.cloud2.gq/repository/ios-test/
